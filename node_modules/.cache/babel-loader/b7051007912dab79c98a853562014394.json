{"ast":null,"code":"import _classCallCheck from \"D:\\\\Users\\\\c05917\\\\Desktop\\\\redux\\\\chrome-api\\\\chrome\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Users\\\\c05917\\\\Desktop\\\\redux\\\\chrome-api\\\\chrome\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport debug from 'debug';\nvar BASE = 'awesome-react-app';\nvar COLOURS = {\n  trace: 'lightblue',\n  info: 'blue',\n  warn: 'pink',\n  error: 'red'\n}; // choose better colours :)\n\nvar Log =\n/*#__PURE__*/\nfunction () {\n  function Log() {\n    _classCallCheck(this, Log);\n  }\n\n  _createClass(Log, [{\n    key: \"generateMessage\",\n    value: function generateMessage(level, message, source) {\n      // Set the prefix which will cause debug to enable the message\n      var namespace = \"\".concat(BASE, \":\").concat(level);\n      var createDebug = debug(namespace); // Set the colour of the message based on the level\n\n      createDebug.color = COLOURS[level];\n\n      if (source) {\n        createDebug(source, message);\n      } else {\n        createDebug(message);\n      }\n    }\n  }, {\n    key: \"trace\",\n    value: function trace(message, source) {\n      return this.generateMessage('trace', message, source);\n    }\n  }, {\n    key: \"info\",\n    value: function info(message, source) {\n      return this.generateMessage('info', message, source);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(message, source) {\n      return this.generateMessage('warn', message, source);\n    }\n  }, {\n    key: \"error\",\n    value: function error(message, source) {\n      return this.generateMessage('error', message, source);\n    }\n  }]);\n\n  return Log;\n}();\n\nexport default new Log();","map":{"version":3,"sources":["D:\\Users\\c05917\\Desktop\\redux\\chrome-api\\chrome\\src\\Utils\\Log.js"],"names":["debug","BASE","COLOURS","trace","info","warn","error","Log","level","message","source","namespace","createDebug","color","generateMessage"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,IAAI,GAAG,mBAAb;AACA,IAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE,WADO;AAEdC,EAAAA,IAAI,EAAE,MAFQ;AAGdC,EAAAA,IAAI,EAAE,MAHQ;AAIdC,EAAAA,KAAK,EAAE;AAJO,CAAhB,C,CAKG;;IAEGC,G;;;;;;;;;oCACYC,K,EAAOC,O,EAASC,M,EAAQ;AACtC;AACA,UAAMC,SAAS,aAAMV,IAAN,cAAcO,KAAd,CAAf;AACA,UAAMI,WAAW,GAAGZ,KAAK,CAACW,SAAD,CAAzB,CAHsC,CAKtC;;AACAC,MAAAA,WAAW,CAACC,KAAZ,GAAoBX,OAAO,CAACM,KAAD,CAA3B;;AAEA,UAAGE,MAAH,EAAW;AAAEE,QAAAA,WAAW,CAACF,MAAD,EAASD,OAAT,CAAX;AAA+B,OAA5C,MACK;AAAEG,QAAAA,WAAW,CAACH,OAAD,CAAX;AAAuB;AAC/B;;;0BAEKA,O,EAASC,M,EAAQ;AACrB,aAAO,KAAKI,eAAL,CAAqB,OAArB,EAA8BL,OAA9B,EAAuCC,MAAvC,CAAP;AACD;;;yBAEID,O,EAASC,M,EAAQ;AACpB,aAAO,KAAKI,eAAL,CAAqB,MAArB,EAA6BL,OAA7B,EAAsCC,MAAtC,CAAP;AACD;;;yBAEID,O,EAASC,M,EAAQ;AACpB,aAAO,KAAKI,eAAL,CAAqB,MAArB,EAA6BL,OAA7B,EAAsCC,MAAtC,CAAP;AACD;;;0BAEKD,O,EAASC,M,EAAQ;AACrB,aAAO,KAAKI,eAAL,CAAqB,OAArB,EAA8BL,OAA9B,EAAuCC,MAAvC,CAAP;AACD;;;;;;AAGH,eAAe,IAAIH,GAAJ,EAAf","sourcesContent":["\r\nimport debug from 'debug';\r\n\r\nconst BASE = 'awesome-react-app';\r\nconst COLOURS = {\r\n  trace: 'lightblue',\r\n  info: 'blue',\r\n  warn: 'pink',\r\n  error: 'red'\r\n}; // choose better colours :)\r\n\r\nclass Log {\r\n  generateMessage(level, message, source) {\r\n    // Set the prefix which will cause debug to enable the message\r\n    const namespace = `${BASE}:${level}`;\r\n    const createDebug = debug(namespace);\r\n    \r\n    // Set the colour of the message based on the level\r\n    createDebug.color = COLOURS[level];\r\n    \r\n    if(source) { createDebug(source, message); }\r\n    else { createDebug(message); }\r\n  }\r\n  \r\n  trace(message, source) {\r\n    return this.generateMessage('trace', message, source);\r\n  }\r\n  \r\n  info(message, source) {\r\n    return this.generateMessage('info', message, source);\r\n  }\r\n  \r\n  warn(message, source) {\r\n    return this.generateMessage('warn', message, source);\r\n  }\r\n  \r\n  error(message, source) {\r\n    return this.generateMessage('error', message, source);\r\n  }\r\n}\r\n\r\nexport default new Log();"]},"metadata":{},"sourceType":"module"}